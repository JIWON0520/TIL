{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"따릉이 대여 수요예측_스태킹을 이용한 앙상블","provenance":[],"mount_file_id":"1rXCmp6TGDAWhWr4ef2oRxp_i0PqbWyvS","authorship_tag":"ABX9TyP470J4q0yv9QLNAIBZ7EQa"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"FjWX51jsPdzM","executionInfo":{"status":"ok","timestamp":1628232935232,"user_tz":-540,"elapsed":1622,"user":{"displayName":"젼이","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgGK49nGZvWM2IHbCczFOa4XgSYIwCEXYl4CCFY=s64","userId":"11496389561389567752"}}},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.experimental import enable_iterative_imputer\n","from sklearn.impute import IterativeImputer\n","from sklearn.model_selection import cross_val_score\n","from lightgbm import LGBMRegressor\n","from xgboost import XGBRegressor\n","from sklearn.ensemble import RandomForestRegressor\n","import warnings\n","warnings.filterwarnings('ignore')\n","from sklearn.linear_model import Ridge,Lasso\n","from sklearn.tree import DecisionTreeRegressor\n","from sklearn.model_selection import KFold\n","%matplotlib inline\n","\n"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"1q0PReEKPsVv","executionInfo":{"status":"ok","timestamp":1628233087033,"user_tz":-540,"elapsed":900,"user":{"displayName":"젼이","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgGK49nGZvWM2IHbCczFOa4XgSYIwCEXYl4CCFY=s64","userId":"11496389561389567752"}}},"source":["train=pd.read_csv('/content/drive/MyDrive/따릉이/train.csv')\n","test=pd.read_csv('/content/drive/MyDrive/따릉이/test.csv')"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YptuIP7IQVms","executionInfo":{"status":"ok","timestamp":1628233105162,"user_tz":-540,"elapsed":264,"user":{"displayName":"젼이","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgGK49nGZvWM2IHbCczFOa4XgSYIwCEXYl4CCFY=s64","userId":"11496389561389567752"}},"outputId":"f89beb31-f94e-4b47-8a11-9b6f15726360"},"source":["all_data=pd.concat([train,test],ignore_index=True)\n","all_data=all_data.drop('count',axis=1)\n","all_data.shape"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2174, 10)"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Emwqru4SQPFT","executionInfo":{"status":"ok","timestamp":1628233106760,"user_tz":-540,"elapsed":655,"user":{"displayName":"젼이","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgGK49nGZvWM2IHbCczFOa4XgSYIwCEXYl4CCFY=s64","userId":"11496389561389567752"}},"outputId":"2ce87c0b-d58b-4c03-b848-5a740e27bd0b"},"source":["#결측치 대체\n","imputer = IterativeImputer(missing_values=np.nan, random_state=0, n_nearest_features=5, sample_posterior=True)\n","all_data_transform=pd.DataFrame(imputer.fit_transform(all_data),columns=all_data.columns)\n","all_data_transform.isnull().sum()"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["id                        0\n","hour                      0\n","hour_bef_temperature      0\n","hour_bef_precipitation    0\n","hour_bef_windspeed        0\n","hour_bef_humidity         0\n","hour_bef_visibility       0\n","hour_bef_ozone            0\n","hour_bef_pm10             0\n","hour_bef_pm2.5            0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"TWz56yyyQYDu","executionInfo":{"status":"ok","timestamp":1628233113871,"user_tz":-540,"elapsed":242,"user":{"displayName":"젼이","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgGK49nGZvWM2IHbCczFOa4XgSYIwCEXYl4CCFY=s64","userId":"11496389561389567752"}}},"source":["target=train['count']\n","train=all_data_transform.iloc[:1459,:]\n","test=all_data_transform.iloc[1459:,:]"],"execution_count":7,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VfmUtRkLTmq4"},"source":["### 스태킹 앙상블"]},{"cell_type":"code","metadata":{"id":"SYySZ5PxQZ6j","executionInfo":{"status":"ok","timestamp":1628236878726,"user_tz":-540,"elapsed":249,"user":{"displayName":"젼이","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgGK49nGZvWM2IHbCczFOa4XgSYIwCEXYl4CCFY=s64","userId":"11496389561389567752"}}},"source":["#개별 기반 모델에서 최종 메타 모델이 사용할 학습 및 테스트용 데이터를 생성하기 위한함수\n","def get_stacking_data(model,X_train,y_train,X_test,n_folds):\n","  kf=KFold(n_splits=n_folds,shuffle=False,random_state=0)\n","  train_fold_pred=np.zeros((X_train.shape[0],1))\n","  test_pred=np.zeros((X_test.shape[0],n_folds))\n","  print(model.__class__.__name__,' model 시작')\n","\n","  for folder_counter, (train_index,valid_index) in enumerate(kf.split(X_train)):\n","    print('\\t 폴드 세트:', folder_counter, '시작')\n","    X_tr=X_train[train_index]\n","    y_tr=y_train[train_index]\n","    X_te=X_train[valid_index]\n","\n","    model.fit(X_tr,y_tr)\n","    train_fold_pred[valid_index,:]=model.predict(X_te).reshape(-1,1)\n","    test_pred[:,folder_counter]=model.predict(X_test)\n","\n","  test_pred_mean=np.mean(test_pred,axis=1).reshape(-1,1)\n","\n","  return train_fold_pred,test_pred_mean"],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vTq8dXMYYmvq","executionInfo":{"status":"ok","timestamp":1628237311353,"user_tz":-540,"elapsed":48023,"user":{"displayName":"젼이","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgGK49nGZvWM2IHbCczFOa4XgSYIwCEXYl4CCFY=s64","userId":"11496389561389567752"}},"outputId":"c030837c-6b0b-462e-d637-73e2e92fa30b"},"source":["lgbm=RandomForestRegressor(n_estimators=500,random_state=1)\n","xgb=RandomForestRegressor(n_estimators=200,random_state=2)\n","rf=RandomForestRegressor(n_estimators=600,random_state=0)\n","\n","X_train=train.values\n","y_train=target.values\n","X_test=test.values\n","\n","lgbm_train,lgbm_test=get_stacking_data(lgbm,X_train,y_train,X_test,5)\n","xgb_train,xgb_test=get_stacking_data(xgb,X_train,y_train,X_test,5)\n","rf_train,rf_test=get_stacking_data(rf,X_train,y_train,X_test,5)"],"execution_count":28,"outputs":[{"output_type":"stream","text":["RandomForestRegressor  model 시작\n","\t 폴드 세트: 0 시작\n","\t 폴드 세트: 1 시작\n","\t 폴드 세트: 2 시작\n","\t 폴드 세트: 3 시작\n","\t 폴드 세트: 4 시작\n","RandomForestRegressor  model 시작\n","\t 폴드 세트: 0 시작\n","\t 폴드 세트: 1 시작\n","\t 폴드 세트: 2 시작\n","\t 폴드 세트: 3 시작\n","\t 폴드 세트: 4 시작\n","RandomForestRegressor  model 시작\n","\t 폴드 세트: 0 시작\n","\t 폴드 세트: 1 시작\n","\t 폴드 세트: 2 시작\n","\t 폴드 세트: 3 시작\n","\t 폴드 세트: 4 시작\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"cQjoLeGJb2WO","executionInfo":{"status":"ok","timestamp":1628237386073,"user_tz":-540,"elapsed":3230,"user":{"displayName":"젼이","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgGK49nGZvWM2IHbCczFOa4XgSYIwCEXYl4CCFY=s64","userId":"11496389561389567752"}}},"source":["#개별 모델이 변환한 학습 및 테스트용 데이터 세트를 스태킹 형태로 결합\n","Stack_final_X_train=np.concatenate((lgbm_train,xgb_train,rf_train),axis=1)\n","Stack_final_X_test=np.concatenate((lgbm_test,xgb_test,rf_test),axis=1)\n","\n","#최종 메타 모델은 랜덤포레스트 모델을 적용\n","meta_model_rf=RandomForestRegressor(n_estimators=600,random_state=0)\n","\n","meta_model_rf.fit(Stack_final_X_train,target)\n","final=meta_model_rf.predict(Stack_final_X_test)"],"execution_count":29,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"DuXhoN5UeNWo","executionInfo":{"status":"ok","timestamp":1628237387840,"user_tz":-540,"elapsed":270,"user":{"displayName":"젼이","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgGK49nGZvWM2IHbCczFOa4XgSYIwCEXYl4CCFY=s64","userId":"11496389561389567752"}},"outputId":"7ff198a7-18cf-4a9b-b738-1672768e5e46"},"source":["submission=pd.read_csv(\"/content/drive/MyDrive/따릉이/submission.csv\")\n","submission['count']=final\n","submission.to_csv(\"/content/drive/MyDrive/따릉이/submission_06.csv\",index=False)\n","submission.head()"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>95.645000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>226.158333</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>98.663333</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>31.241667</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>62.710000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id       count\n","0   0   95.645000\n","1   1  226.158333\n","2   2   98.663333\n","3   4   31.241667\n","4   5   62.710000"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"Z0slP2VLepOj"},"source":[""],"execution_count":null,"outputs":[]}]}